services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web-ssh-backend
    ports:
      - "3000:3000"
    environment:
      - WEB_SSH_PORT=3000
      - WEB_SSH_FRONTEND_DIR=/app/frontend
      - WEB_SSH_READ_TIMEOUT=30s
      - WEB_SSH_WRITE_TIMEOUT=30s
      - WEB_SSH_MAX_CONNECTIONS=100
      - WEB_SSH_READ_BUFFER_SIZE=1024
      - WEB_SSH_WRITE_BUFFER_SIZE=1024
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      ssh-test-server:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - web-ssh-network

  redis:
    image: redis:7-alpine
    container_name: web-ssh-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - web-ssh-network
  
  ssh-test-server:
    image: linuxserver/openssh-server:latest
    container_name: web-ssh-test-server
    healthcheck:
      test: ["CMD", "echo", "Hello World"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      - "2222:2222" # host:container SSH port
    environment:
      - PUID=1000               # Map to your host UID
      - PGID=1000               # Map to your host GID
      - TZ=UTC                  # Timezone
      - USER_NAME=test # SSH user name
      - PASSWORD=test # Password for SSH user
      # - PUBLIC_KEY_FILE=/config/ssh_host_keys/id_rsa.pub # Optional for key auth
      # - PRIVATE_KEY_FILE=/config/ssh_host_keys/id_rsa # Optional for key auth
    volumes:
      - ssh_config:/config
    restart: unless-stopped
    networks:
      - web-ssh-network

volumes:
  redis_data:
    driver: local
  ssh_config:
    driver: local

networks:
  web-ssh-network:
    driver: bridge